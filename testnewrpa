import RP.GPIO as GPIO
import time

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(false)

pulse = 0
distance = 0
rpm = 0
speed = 0
r = 0.12
wheel_c = 2*pi*r
multiplier = 0
hall = 18
elapse = 0


GPIO.setup(hall,GPIO.IN,pull_up_down=GPIO.PUD.UP)
	
	
def handle_falling_edge():
	start = time.time()
	distance += wheel_c


def get_pulse(number):
	start = time.time()
	distance += wheel_c
	
def main():
	try:
		print('Inializing speedometer')
		time.sleep(1)
		
		start = time.time()	  
		GPIO.add_event_detect(hall,GPIO.FALLING,callback = get_pulse,bouncetime=20)
		
		# For now just set a random val - literally no meaning
		speed = 5
		  
		while True:
			elapse = time.time() - start  
			multiplier = 3600/elapse
			rpm = 1/elapse*60
			speed = (wheel_c*multiplier)/(1000)

			print('rpm{0:.2f} speed{1:.2f} distance{2} elapse{3:.4f} multiplier{4:.2f}'.format(rpm,speed,distance,elapse,multiplier))
			time.sleep(0.1)

			if speed < 1:
				print(str.format('{0:.2f}', distance), "Meters")
				print("MICE IS NO LONGER RUNNING.")
				return distance
			
	except KeyboardInterrupt:
		print('End of program')
		GPIO.cleanup()


if __name__ == '__main__':
	distance = main()
